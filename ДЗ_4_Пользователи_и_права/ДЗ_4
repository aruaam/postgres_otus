1 создайте новый кластер PostgresSQL 13 (на выбор - GCE, CloudSQL)

gcloud compute instances create postgres --project=sodium-hour-343317 --zone=us-central1-c --machine-type=e2-medium --network-interface=network-tier=PREMIUM,subnet=default --maintenance-policy=MIGRATE --service-account=436077753633-compute@developer.gserviceaccount.com --scopes=https://www.googleapis.com/auth/devstorage.read_only,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/servicecontrol,https://www.googleapis.com/auth/service.management.readonly,https://www.googleapis.com/auth/trace.append --create-disk=auto-delete=yes,boot=yes,device-name=instance-1,image=projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20220308,mode=rw,size=10,type=projects/sodium-hour-343317/zones/us-central1-c/diskTypes/pd-ssd --no-shielded-secure-boot --shielded-vtpm --shielded-integrity-monitoring --reservation-affinity=any

sudo apt update && sudo apt upgrade -y -q && sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list' && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - && sudo apt-get update && sudo apt -y install postgresql-13

2 зайдите в созданный кластер под пользователем postgres

sudo -u postgres psql

3 создайте новую базу данных testdb

CREATE DATABASE testdb;

4 зайдите в созданную базу данных под пользователем postgres

\c testdb;

5 создайте новую схему testnm

CREATE SCHEMA testnm;

6 создайте новую таблицу t1 с одной колонкой c1 типа integer

CREATE TABLE t1 (c1 int);

7 вставьте строку со значением c1=1

INSERT INTO t1 VALUES (1);

8 создайте новую роль readonly

CREATE ROLE readonly;

9 дайте новой роли право на подключение к базе данных testdb

GRANT CONNECT ON DATABASE testdb TO readonly;

10 дайте новой роли право на использование схемы testnm

GRANT USAGE ON SCHEMA testnm TO readonly;

11 дайте новой роли право на select для всех таблиц схемы testnm

GRANT SELECT ON ALL TABLES IN SCHEMA testnm TO readonly;

12 создайте пользователя testread с паролем test123

CREATE USER testread WITH PASSWORD 'test123';

13 дайте роль readonly пользователю testread

GRANT readonly TO testread;

14 зайдите под пользователем testread в базу данных testdb

\c testdb testread

15 сделайте select * from t1;

ERROR:  permission denied for table t1

16 получилось? (могло если вы делали сами не по шпаргалке и не упустили один существенный момент про который позже)
17 напишите что именно произошло в тексте домашнего задания
18 у вас есть идеи почему? ведь права то дали?
19 посмотрите на список таблиц
20 подсказка в шпаргалке под пунктом 20
21 а почему так получилось с таблицей (если делали сами и без шпаргалки то может у вас все нормально)

 Schema | Name | Type  |  Owner
--------+------+-------+----------
 public | t1   | table | postgres

Таблица t1 создалась по дефолту в public потому что мы не указали явно нужную схему при создании. А у роли readonly и юзера testread право селекта только на схему testnm.

22 вернитесь в базу данных testdb под пользователем postgres

\с testdb postgres

23 удалите таблицу t1

DROP TABLE t1;

24 создайте ее заново но уже с явным указанием имени схемы testnm

CREATE TABLE testnm.t1 (c1 int);

25 вставьте строку со значением c1=1

INSERT INTO t1 VALUES (1);

26 зайдите под пользователем testread в базу данных testdb

\c testdb testread

27 сделайте select * from testnm.t1;
28 получилось?
29 есть идеи почему? если нет - смотрите шпаргалку

Не получилось, разобрался только со шпаргалкой. Тут не сработало, потому что на вновь созданную таблицу GRANT SELECT нужно было применить заново.

30 как сделать так чтобы такое больше не повторялось? если нет идей - смотрите шпаргалку

Не понял, разобрался только со шпаргалкой. ALTER DEFAULT PRIVILEGES нужен, чтобы для новых таблиц в схеме разрешать отдельные действия без необходимости применения GRANT каждый раз после создания таблицы.

31 сделайте select * from testnm.t1;
32 получилось?
33 есть идеи почему? если нет - смотрите шпаргалку

Не получилось, разобрался только со шпаргалкой. Здесь получилось, что ни ALTER DEFAULT PRIVILEGES, ни последний GRANT SELECT не затронули таблицу testnm.t1, потому и нет права на селект по прежнему.

34 теперь попробуйте выполнить команду create table t2(c1 integer); insert into t2 values (2);
35 а как так? нам же никто прав на создание таблиц и insert в них под ролью readonly?
36 есть идеи как убрать эти права? если нет - смотрите шпаргалку
37 если вы справились сами то расскажите что сделали и почему, если смотрели шпаргалку - объясните что сделали и почему выполнив указанные в ней команды
38 теперь попробуйте выполнить команду create table t3(c1 integer); insert into t2 values (2);
39 расскажите что получилось и почему 

Самостоятельно тоже не получилось разобраться. 

По дефолту согласно search_path таблица t2 попала в схему public, в которой нашему юзера testread можно всё, поскольку он относится к совокупности ролей PUBLIC, куда входят все юзеры. Чтобы такого не было мы отобрали право создавать объекты в схеме public для всех юзеров (PUBLIC), а также через revoke all все привилегии (в т.ч. возможность подключаться) для всех юзеров в нашей тестовой базе testdb. После того как отобрали эти привилегии ни создать таблицу, ни добавить строку не получилось:

ERROR:  permission denied for schema public

